/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as AdminSettingsRouteRouteImport } from './routes/admin/settings/route'
import { Route as AdminUsersIndexRouteImport } from './routes/admin/users/index'
import { Route as AdminTasksIndexRouteImport } from './routes/admin/tasks/index'
import { Route as AdminSettingsIndexRouteImport } from './routes/admin/settings/index'
import { Route as AdminReportsIndexRouteImport } from './routes/admin/reports/index'
import { Route as AdminHelpCenterIndexRouteImport } from './routes/admin/help-center/index'
import { Route as AdminChatsIndexRouteImport } from './routes/admin/chats/index'
import { Route as AdminCampaignsIndexRouteImport } from './routes/admin/campaigns/index'
import { Route as AdminBrandingIndexRouteImport } from './routes/admin/branding/index'
import { Route as AdminAppsIndexRouteImport } from './routes/admin/apps/index'
import { Route as AdminSettingsNotificationsRouteImport } from './routes/admin/settings/notifications'
import { Route as AdminSettingsDisplayRouteImport } from './routes/admin/settings/display'
import { Route as AdminSettingsAppearanceRouteImport } from './routes/admin/settings/appearance'
import { Route as AdminSettingsAccountRouteImport } from './routes/admin/settings/account'
import { Route as AdminCampaignsSlugRouteImport } from './routes/admin/campaigns/$slug'
import { Route as AdminauthSignUpRouteImport } from './routes/admin/(auth)/sign-up'
import { Route as AdminauthSignIn2RouteImport } from './routes/admin/(auth)/sign-in-2'
import { Route as AdminauthSignInRouteImport } from './routes/admin/(auth)/sign-in'
import { Route as AdminauthOtpRouteImport } from './routes/admin/(auth)/otp'
import { Route as AdminauthForgotPasswordRouteImport } from './routes/admin/(auth)/forgot-password'

const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSettingsRouteRoute = AdminSettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminUsersIndexRoute = AdminUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminTasksIndexRoute = AdminTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminSettingsIndexRoute = AdminSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)
const AdminReportsIndexRoute = AdminReportsIndexRouteImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminHelpCenterIndexRoute = AdminHelpCenterIndexRouteImport.update({
  id: '/help-center/',
  path: '/help-center/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminChatsIndexRoute = AdminChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminCampaignsIndexRoute = AdminCampaignsIndexRouteImport.update({
  id: '/campaigns/',
  path: '/campaigns/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminBrandingIndexRoute = AdminBrandingIndexRouteImport.update({
  id: '/branding/',
  path: '/branding/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAppsIndexRoute = AdminAppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminSettingsNotificationsRoute =
  AdminSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AdminSettingsRouteRoute,
  } as any)
const AdminSettingsDisplayRoute = AdminSettingsDisplayRouteImport.update({
  id: '/display',
  path: '/display',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)
const AdminSettingsAppearanceRoute = AdminSettingsAppearanceRouteImport.update({
  id: '/appearance',
  path: '/appearance',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)
const AdminSettingsAccountRoute = AdminSettingsAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)
const AdminCampaignsSlugRoute = AdminCampaignsSlugRouteImport.update({
  id: '/campaigns/$slug',
  path: '/campaigns/$slug',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminauthSignUpRoute = AdminauthSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminauthSignIn2Route = AdminauthSignIn2RouteImport.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminauthSignInRoute = AdminauthSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminauthOtpRoute = AdminauthOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminauthForgotPasswordRoute = AdminauthForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AdminRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/settings': typeof AdminSettingsRouteRouteWithChildren
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/admin/': typeof AdminIndexRoute
  '/admin/forgot-password': typeof AdminauthForgotPasswordRoute
  '/admin/otp': typeof AdminauthOtpRoute
  '/admin/sign-in': typeof AdminauthSignInRoute
  '/admin/sign-in-2': typeof AdminauthSignIn2Route
  '/admin/sign-up': typeof AdminauthSignUpRoute
  '/admin/campaigns/$slug': typeof AdminCampaignsSlugRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/admin/apps': typeof AdminAppsIndexRoute
  '/admin/branding': typeof AdminBrandingIndexRoute
  '/admin/campaigns': typeof AdminCampaignsIndexRoute
  '/admin/chats': typeof AdminChatsIndexRoute
  '/admin/help-center': typeof AdminHelpCenterIndexRoute
  '/admin/reports': typeof AdminReportsIndexRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/admin/tasks': typeof AdminTasksIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/admin': typeof AdminIndexRoute
  '/admin/forgot-password': typeof AdminauthForgotPasswordRoute
  '/admin/otp': typeof AdminauthOtpRoute
  '/admin/sign-in': typeof AdminauthSignInRoute
  '/admin/sign-in-2': typeof AdminauthSignIn2Route
  '/admin/sign-up': typeof AdminauthSignUpRoute
  '/admin/campaigns/$slug': typeof AdminCampaignsSlugRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/admin/apps': typeof AdminAppsIndexRoute
  '/admin/branding': typeof AdminBrandingIndexRoute
  '/admin/campaigns': typeof AdminCampaignsIndexRoute
  '/admin/chats': typeof AdminChatsIndexRoute
  '/admin/help-center': typeof AdminHelpCenterIndexRoute
  '/admin/reports': typeof AdminReportsIndexRoute
  '/admin/settings': typeof AdminSettingsIndexRoute
  '/admin/tasks': typeof AdminTasksIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/settings': typeof AdminSettingsRouteRouteWithChildren
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/admin/': typeof AdminIndexRoute
  '/admin/(auth)/forgot-password': typeof AdminauthForgotPasswordRoute
  '/admin/(auth)/otp': typeof AdminauthOtpRoute
  '/admin/(auth)/sign-in': typeof AdminauthSignInRoute
  '/admin/(auth)/sign-in-2': typeof AdminauthSignIn2Route
  '/admin/(auth)/sign-up': typeof AdminauthSignUpRoute
  '/admin/campaigns/$slug': typeof AdminCampaignsSlugRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/admin/apps/': typeof AdminAppsIndexRoute
  '/admin/branding/': typeof AdminBrandingIndexRoute
  '/admin/campaigns/': typeof AdminCampaignsIndexRoute
  '/admin/chats/': typeof AdminChatsIndexRoute
  '/admin/help-center/': typeof AdminHelpCenterIndexRoute
  '/admin/reports/': typeof AdminReportsIndexRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/admin/tasks/': typeof AdminTasksIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/admin/settings'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/admin/'
    | '/admin/forgot-password'
    | '/admin/otp'
    | '/admin/sign-in'
    | '/admin/sign-in-2'
    | '/admin/sign-up'
    | '/admin/campaigns/$slug'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/admin/apps'
    | '/admin/branding'
    | '/admin/campaigns'
    | '/admin/chats'
    | '/admin/help-center'
    | '/admin/reports'
    | '/admin/settings/'
    | '/admin/tasks'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/admin'
    | '/admin/forgot-password'
    | '/admin/otp'
    | '/admin/sign-in'
    | '/admin/sign-in-2'
    | '/admin/sign-up'
    | '/admin/campaigns/$slug'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/admin/apps'
    | '/admin/branding'
    | '/admin/campaigns'
    | '/admin/chats'
    | '/admin/help-center'
    | '/admin/reports'
    | '/admin/settings'
    | '/admin/tasks'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/admin/settings'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/admin/'
    | '/admin/(auth)/forgot-password'
    | '/admin/(auth)/otp'
    | '/admin/(auth)/sign-in'
    | '/admin/(auth)/sign-in-2'
    | '/admin/(auth)/sign-up'
    | '/admin/campaigns/$slug'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/admin/apps/'
    | '/admin/branding/'
    | '/admin/campaigns/'
    | '/admin/chats/'
    | '/admin/help-center/'
    | '/admin/reports/'
    | '/admin/settings/'
    | '/admin/tasks/'
    | '/admin/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/tasks/': {
      id: '/admin/tasks/'
      path: '/tasks'
      fullPath: '/admin/tasks'
      preLoaderRoute: typeof AdminTasksIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/settings/': {
      id: '/admin/settings/'
      path: '/'
      fullPath: '/admin/settings/'
      preLoaderRoute: typeof AdminSettingsIndexRouteImport
      parentRoute: typeof AdminSettingsRouteRoute
    }
    '/admin/reports/': {
      id: '/admin/reports/'
      path: '/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AdminReportsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/help-center/': {
      id: '/admin/help-center/'
      path: '/help-center'
      fullPath: '/admin/help-center'
      preLoaderRoute: typeof AdminHelpCenterIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/chats/': {
      id: '/admin/chats/'
      path: '/chats'
      fullPath: '/admin/chats'
      preLoaderRoute: typeof AdminChatsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/campaigns/': {
      id: '/admin/campaigns/'
      path: '/campaigns'
      fullPath: '/admin/campaigns'
      preLoaderRoute: typeof AdminCampaignsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/branding/': {
      id: '/admin/branding/'
      path: '/branding'
      fullPath: '/admin/branding'
      preLoaderRoute: typeof AdminBrandingIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/apps/': {
      id: '/admin/apps/'
      path: '/apps'
      fullPath: '/admin/apps'
      preLoaderRoute: typeof AdminAppsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/settings/notifications': {
      id: '/admin/settings/notifications'
      path: '/notifications'
      fullPath: '/admin/settings/notifications'
      preLoaderRoute: typeof AdminSettingsNotificationsRouteImport
      parentRoute: typeof AdminSettingsRouteRoute
    }
    '/admin/settings/display': {
      id: '/admin/settings/display'
      path: '/display'
      fullPath: '/admin/settings/display'
      preLoaderRoute: typeof AdminSettingsDisplayRouteImport
      parentRoute: typeof AdminSettingsRouteRoute
    }
    '/admin/settings/appearance': {
      id: '/admin/settings/appearance'
      path: '/appearance'
      fullPath: '/admin/settings/appearance'
      preLoaderRoute: typeof AdminSettingsAppearanceRouteImport
      parentRoute: typeof AdminSettingsRouteRoute
    }
    '/admin/settings/account': {
      id: '/admin/settings/account'
      path: '/account'
      fullPath: '/admin/settings/account'
      preLoaderRoute: typeof AdminSettingsAccountRouteImport
      parentRoute: typeof AdminSettingsRouteRoute
    }
    '/admin/campaigns/$slug': {
      id: '/admin/campaigns/$slug'
      path: '/campaigns/$slug'
      fullPath: '/admin/campaigns/$slug'
      preLoaderRoute: typeof AdminCampaignsSlugRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(auth)/sign-up': {
      id: '/admin/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/admin/sign-up'
      preLoaderRoute: typeof AdminauthSignUpRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(auth)/sign-in-2': {
      id: '/admin/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/admin/sign-in-2'
      preLoaderRoute: typeof AdminauthSignIn2RouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(auth)/sign-in': {
      id: '/admin/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/admin/sign-in'
      preLoaderRoute: typeof AdminauthSignInRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(auth)/otp': {
      id: '/admin/(auth)/otp'
      path: '/otp'
      fullPath: '/admin/otp'
      preLoaderRoute: typeof AdminauthOtpRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(auth)/forgot-password': {
      id: '/admin/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/admin/forgot-password'
      preLoaderRoute: typeof AdminauthForgotPasswordRouteImport
      parentRoute: typeof AdminRouteRoute
    }
  }
}

interface AdminSettingsRouteRouteChildren {
  AdminSettingsAccountRoute: typeof AdminSettingsAccountRoute
  AdminSettingsAppearanceRoute: typeof AdminSettingsAppearanceRoute
  AdminSettingsDisplayRoute: typeof AdminSettingsDisplayRoute
  AdminSettingsNotificationsRoute: typeof AdminSettingsNotificationsRoute
  AdminSettingsIndexRoute: typeof AdminSettingsIndexRoute
}

const AdminSettingsRouteRouteChildren: AdminSettingsRouteRouteChildren = {
  AdminSettingsAccountRoute: AdminSettingsAccountRoute,
  AdminSettingsAppearanceRoute: AdminSettingsAppearanceRoute,
  AdminSettingsDisplayRoute: AdminSettingsDisplayRoute,
  AdminSettingsNotificationsRoute: AdminSettingsNotificationsRoute,
  AdminSettingsIndexRoute: AdminSettingsIndexRoute,
}

const AdminSettingsRouteRouteWithChildren =
  AdminSettingsRouteRoute._addFileChildren(AdminSettingsRouteRouteChildren)

interface AdminRouteRouteChildren {
  AdminSettingsRouteRoute: typeof AdminSettingsRouteRouteWithChildren
  AdminIndexRoute: typeof AdminIndexRoute
  AdminauthForgotPasswordRoute: typeof AdminauthForgotPasswordRoute
  AdminauthOtpRoute: typeof AdminauthOtpRoute
  AdminauthSignInRoute: typeof AdminauthSignInRoute
  AdminauthSignIn2Route: typeof AdminauthSignIn2Route
  AdminauthSignUpRoute: typeof AdminauthSignUpRoute
  AdminCampaignsSlugRoute: typeof AdminCampaignsSlugRoute
  AdminAppsIndexRoute: typeof AdminAppsIndexRoute
  AdminBrandingIndexRoute: typeof AdminBrandingIndexRoute
  AdminCampaignsIndexRoute: typeof AdminCampaignsIndexRoute
  AdminChatsIndexRoute: typeof AdminChatsIndexRoute
  AdminHelpCenterIndexRoute: typeof AdminHelpCenterIndexRoute
  AdminReportsIndexRoute: typeof AdminReportsIndexRoute
  AdminTasksIndexRoute: typeof AdminTasksIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminSettingsRouteRoute: AdminSettingsRouteRouteWithChildren,
  AdminIndexRoute: AdminIndexRoute,
  AdminauthForgotPasswordRoute: AdminauthForgotPasswordRoute,
  AdminauthOtpRoute: AdminauthOtpRoute,
  AdminauthSignInRoute: AdminauthSignInRoute,
  AdminauthSignIn2Route: AdminauthSignIn2Route,
  AdminauthSignUpRoute: AdminauthSignUpRoute,
  AdminCampaignsSlugRoute: AdminCampaignsSlugRoute,
  AdminAppsIndexRoute: AdminAppsIndexRoute,
  AdminBrandingIndexRoute: AdminBrandingIndexRoute,
  AdminCampaignsIndexRoute: AdminCampaignsIndexRoute,
  AdminChatsIndexRoute: AdminChatsIndexRoute,
  AdminHelpCenterIndexRoute: AdminHelpCenterIndexRoute,
  AdminReportsIndexRoute: AdminReportsIndexRoute,
  AdminTasksIndexRoute: AdminTasksIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
