/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as AdminauthSignUpRouteImport } from './routes/admin/(auth)/sign-up'
import { Route as AdminauthSignIn2RouteImport } from './routes/admin/(auth)/sign-in-2'
import { Route as AdminauthSignInRouteImport } from './routes/admin/(auth)/sign-in'
import { Route as AdminauthOtpRouteImport } from './routes/admin/(auth)/otp'
import { Route as AdminauthForgotPasswordRouteImport } from './routes/admin/(auth)/forgot-password'
import { Route as AdmindashboardSettingsRouteRouteImport } from './routes/admin/(dashboard)/settings/route'
import { Route as AdmindashboardUsersIndexRouteImport } from './routes/admin/(dashboard)/users/index'
import { Route as AdmindashboardSettingsIndexRouteImport } from './routes/admin/(dashboard)/settings/index'
import { Route as AdmindashboardReportsIndexRouteImport } from './routes/admin/(dashboard)/reports/index'
import { Route as AdmindashboardCampaignsIndexRouteImport } from './routes/admin/(dashboard)/campaigns/index'
import { Route as AdmindashboardBrandingIndexRouteImport } from './routes/admin/(dashboard)/branding/index'
import { Route as AdmindashboardSettingsNotificationsRouteImport } from './routes/admin/(dashboard)/settings/notifications'
import { Route as AdmindashboardSettingsDisplayRouteImport } from './routes/admin/(dashboard)/settings/display'
import { Route as AdmindashboardSettingsAppearanceRouteImport } from './routes/admin/(dashboard)/settings/appearance'
import { Route as AdmindashboardSettingsAccountRouteImport } from './routes/admin/(dashboard)/settings/account'
import { Route as AdmindashboardCampaignsSlugRouteImport } from './routes/admin/(dashboard)/campaigns/$slug'

const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminauthSignUpRoute = AdminauthSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminauthSignIn2Route = AdminauthSignIn2RouteImport.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminauthSignInRoute = AdminauthSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminauthOtpRoute = AdminauthOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminauthForgotPasswordRoute = AdminauthForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdmindashboardSettingsRouteRoute =
  AdmindashboardSettingsRouteRouteImport.update({
    id: '/(dashboard)/settings',
    path: '/settings',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdmindashboardUsersIndexRoute =
  AdmindashboardUsersIndexRouteImport.update({
    id: '/(dashboard)/users/',
    path: '/users/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdmindashboardSettingsIndexRoute =
  AdmindashboardSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdmindashboardSettingsRouteRoute,
  } as any)
const AdmindashboardReportsIndexRoute =
  AdmindashboardReportsIndexRouteImport.update({
    id: '/(dashboard)/reports/',
    path: '/reports/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdmindashboardCampaignsIndexRoute =
  AdmindashboardCampaignsIndexRouteImport.update({
    id: '/(dashboard)/campaigns/',
    path: '/campaigns/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdmindashboardBrandingIndexRoute =
  AdmindashboardBrandingIndexRouteImport.update({
    id: '/(dashboard)/branding/',
    path: '/branding/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdmindashboardSettingsNotificationsRoute =
  AdmindashboardSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AdmindashboardSettingsRouteRoute,
  } as any)
const AdmindashboardSettingsDisplayRoute =
  AdmindashboardSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AdmindashboardSettingsRouteRoute,
  } as any)
const AdmindashboardSettingsAppearanceRoute =
  AdmindashboardSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AdmindashboardSettingsRouteRoute,
  } as any)
const AdmindashboardSettingsAccountRoute =
  AdmindashboardSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AdmindashboardSettingsRouteRoute,
  } as any)
const AdmindashboardCampaignsSlugRoute =
  AdmindashboardCampaignsSlugRouteImport.update({
    id: '/(dashboard)/campaigns/$slug',
    path: '/campaigns/$slug',
    getParentRoute: () => AdminRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/admin/': typeof AdminIndexRoute
  '/admin/settings': typeof AdmindashboardSettingsRouteRouteWithChildren
  '/admin/forgot-password': typeof AdminauthForgotPasswordRoute
  '/admin/otp': typeof AdminauthOtpRoute
  '/admin/sign-in': typeof AdminauthSignInRoute
  '/admin/sign-in-2': typeof AdminauthSignIn2Route
  '/admin/sign-up': typeof AdminauthSignUpRoute
  '/admin/campaigns/$slug': typeof AdmindashboardCampaignsSlugRoute
  '/admin/settings/account': typeof AdmindashboardSettingsAccountRoute
  '/admin/settings/appearance': typeof AdmindashboardSettingsAppearanceRoute
  '/admin/settings/display': typeof AdmindashboardSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdmindashboardSettingsNotificationsRoute
  '/admin/branding': typeof AdmindashboardBrandingIndexRoute
  '/admin/campaigns': typeof AdmindashboardCampaignsIndexRoute
  '/admin/reports': typeof AdmindashboardReportsIndexRoute
  '/admin/settings/': typeof AdmindashboardSettingsIndexRoute
  '/admin/users': typeof AdmindashboardUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/admin': typeof AdminIndexRoute
  '/admin/forgot-password': typeof AdminauthForgotPasswordRoute
  '/admin/otp': typeof AdminauthOtpRoute
  '/admin/sign-in': typeof AdminauthSignInRoute
  '/admin/sign-in-2': typeof AdminauthSignIn2Route
  '/admin/sign-up': typeof AdminauthSignUpRoute
  '/admin/campaigns/$slug': typeof AdmindashboardCampaignsSlugRoute
  '/admin/settings/account': typeof AdmindashboardSettingsAccountRoute
  '/admin/settings/appearance': typeof AdmindashboardSettingsAppearanceRoute
  '/admin/settings/display': typeof AdmindashboardSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdmindashboardSettingsNotificationsRoute
  '/admin/branding': typeof AdmindashboardBrandingIndexRoute
  '/admin/campaigns': typeof AdmindashboardCampaignsIndexRoute
  '/admin/reports': typeof AdmindashboardReportsIndexRoute
  '/admin/settings': typeof AdmindashboardSettingsIndexRoute
  '/admin/users': typeof AdmindashboardUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/admin/': typeof AdminIndexRoute
  '/admin/(dashboard)/settings': typeof AdmindashboardSettingsRouteRouteWithChildren
  '/admin/(auth)/forgot-password': typeof AdminauthForgotPasswordRoute
  '/admin/(auth)/otp': typeof AdminauthOtpRoute
  '/admin/(auth)/sign-in': typeof AdminauthSignInRoute
  '/admin/(auth)/sign-in-2': typeof AdminauthSignIn2Route
  '/admin/(auth)/sign-up': typeof AdminauthSignUpRoute
  '/admin/(dashboard)/campaigns/$slug': typeof AdmindashboardCampaignsSlugRoute
  '/admin/(dashboard)/settings/account': typeof AdmindashboardSettingsAccountRoute
  '/admin/(dashboard)/settings/appearance': typeof AdmindashboardSettingsAppearanceRoute
  '/admin/(dashboard)/settings/display': typeof AdmindashboardSettingsDisplayRoute
  '/admin/(dashboard)/settings/notifications': typeof AdmindashboardSettingsNotificationsRoute
  '/admin/(dashboard)/branding/': typeof AdmindashboardBrandingIndexRoute
  '/admin/(dashboard)/campaigns/': typeof AdmindashboardCampaignsIndexRoute
  '/admin/(dashboard)/reports/': typeof AdmindashboardReportsIndexRoute
  '/admin/(dashboard)/settings/': typeof AdmindashboardSettingsIndexRoute
  '/admin/(dashboard)/users/': typeof AdmindashboardUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/admin/'
    | '/admin/settings'
    | '/admin/forgot-password'
    | '/admin/otp'
    | '/admin/sign-in'
    | '/admin/sign-in-2'
    | '/admin/sign-up'
    | '/admin/campaigns/$slug'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/admin/branding'
    | '/admin/campaigns'
    | '/admin/reports'
    | '/admin/settings/'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/admin'
    | '/admin/forgot-password'
    | '/admin/otp'
    | '/admin/sign-in'
    | '/admin/sign-in-2'
    | '/admin/sign-up'
    | '/admin/campaigns/$slug'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/admin/branding'
    | '/admin/campaigns'
    | '/admin/reports'
    | '/admin/settings'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/admin/'
    | '/admin/(dashboard)/settings'
    | '/admin/(auth)/forgot-password'
    | '/admin/(auth)/otp'
    | '/admin/(auth)/sign-in'
    | '/admin/(auth)/sign-in-2'
    | '/admin/(auth)/sign-up'
    | '/admin/(dashboard)/campaigns/$slug'
    | '/admin/(dashboard)/settings/account'
    | '/admin/(dashboard)/settings/appearance'
    | '/admin/(dashboard)/settings/display'
    | '/admin/(dashboard)/settings/notifications'
    | '/admin/(dashboard)/branding/'
    | '/admin/(dashboard)/campaigns/'
    | '/admin/(dashboard)/reports/'
    | '/admin/(dashboard)/settings/'
    | '/admin/(dashboard)/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/(auth)/sign-up': {
      id: '/admin/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/admin/sign-up'
      preLoaderRoute: typeof AdminauthSignUpRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(auth)/sign-in-2': {
      id: '/admin/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/admin/sign-in-2'
      preLoaderRoute: typeof AdminauthSignIn2RouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(auth)/sign-in': {
      id: '/admin/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/admin/sign-in'
      preLoaderRoute: typeof AdminauthSignInRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(auth)/otp': {
      id: '/admin/(auth)/otp'
      path: '/otp'
      fullPath: '/admin/otp'
      preLoaderRoute: typeof AdminauthOtpRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(auth)/forgot-password': {
      id: '/admin/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/admin/forgot-password'
      preLoaderRoute: typeof AdminauthForgotPasswordRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(dashboard)/settings': {
      id: '/admin/(dashboard)/settings'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdmindashboardSettingsRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(dashboard)/users/': {
      id: '/admin/(dashboard)/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdmindashboardUsersIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(dashboard)/settings/': {
      id: '/admin/(dashboard)/settings/'
      path: '/'
      fullPath: '/admin/settings/'
      preLoaderRoute: typeof AdmindashboardSettingsIndexRouteImport
      parentRoute: typeof AdmindashboardSettingsRouteRoute
    }
    '/admin/(dashboard)/reports/': {
      id: '/admin/(dashboard)/reports/'
      path: '/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AdmindashboardReportsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(dashboard)/campaigns/': {
      id: '/admin/(dashboard)/campaigns/'
      path: '/campaigns'
      fullPath: '/admin/campaigns'
      preLoaderRoute: typeof AdmindashboardCampaignsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(dashboard)/branding/': {
      id: '/admin/(dashboard)/branding/'
      path: '/branding'
      fullPath: '/admin/branding'
      preLoaderRoute: typeof AdmindashboardBrandingIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/(dashboard)/settings/notifications': {
      id: '/admin/(dashboard)/settings/notifications'
      path: '/notifications'
      fullPath: '/admin/settings/notifications'
      preLoaderRoute: typeof AdmindashboardSettingsNotificationsRouteImport
      parentRoute: typeof AdmindashboardSettingsRouteRoute
    }
    '/admin/(dashboard)/settings/display': {
      id: '/admin/(dashboard)/settings/display'
      path: '/display'
      fullPath: '/admin/settings/display'
      preLoaderRoute: typeof AdmindashboardSettingsDisplayRouteImport
      parentRoute: typeof AdmindashboardSettingsRouteRoute
    }
    '/admin/(dashboard)/settings/appearance': {
      id: '/admin/(dashboard)/settings/appearance'
      path: '/appearance'
      fullPath: '/admin/settings/appearance'
      preLoaderRoute: typeof AdmindashboardSettingsAppearanceRouteImport
      parentRoute: typeof AdmindashboardSettingsRouteRoute
    }
    '/admin/(dashboard)/settings/account': {
      id: '/admin/(dashboard)/settings/account'
      path: '/account'
      fullPath: '/admin/settings/account'
      preLoaderRoute: typeof AdmindashboardSettingsAccountRouteImport
      parentRoute: typeof AdmindashboardSettingsRouteRoute
    }
    '/admin/(dashboard)/campaigns/$slug': {
      id: '/admin/(dashboard)/campaigns/$slug'
      path: '/campaigns/$slug'
      fullPath: '/admin/campaigns/$slug'
      preLoaderRoute: typeof AdmindashboardCampaignsSlugRouteImport
      parentRoute: typeof AdminRouteRoute
    }
  }
}

interface AdmindashboardSettingsRouteRouteChildren {
  AdmindashboardSettingsAccountRoute: typeof AdmindashboardSettingsAccountRoute
  AdmindashboardSettingsAppearanceRoute: typeof AdmindashboardSettingsAppearanceRoute
  AdmindashboardSettingsDisplayRoute: typeof AdmindashboardSettingsDisplayRoute
  AdmindashboardSettingsNotificationsRoute: typeof AdmindashboardSettingsNotificationsRoute
  AdmindashboardSettingsIndexRoute: typeof AdmindashboardSettingsIndexRoute
}

const AdmindashboardSettingsRouteRouteChildren: AdmindashboardSettingsRouteRouteChildren =
  {
    AdmindashboardSettingsAccountRoute: AdmindashboardSettingsAccountRoute,
    AdmindashboardSettingsAppearanceRoute:
      AdmindashboardSettingsAppearanceRoute,
    AdmindashboardSettingsDisplayRoute: AdmindashboardSettingsDisplayRoute,
    AdmindashboardSettingsNotificationsRoute:
      AdmindashboardSettingsNotificationsRoute,
    AdmindashboardSettingsIndexRoute: AdmindashboardSettingsIndexRoute,
  }

const AdmindashboardSettingsRouteRouteWithChildren =
  AdmindashboardSettingsRouteRoute._addFileChildren(
    AdmindashboardSettingsRouteRouteChildren,
  )

interface AdminRouteRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdmindashboardSettingsRouteRoute: typeof AdmindashboardSettingsRouteRouteWithChildren
  AdminauthForgotPasswordRoute: typeof AdminauthForgotPasswordRoute
  AdminauthOtpRoute: typeof AdminauthOtpRoute
  AdminauthSignInRoute: typeof AdminauthSignInRoute
  AdminauthSignIn2Route: typeof AdminauthSignIn2Route
  AdminauthSignUpRoute: typeof AdminauthSignUpRoute
  AdmindashboardCampaignsSlugRoute: typeof AdmindashboardCampaignsSlugRoute
  AdmindashboardBrandingIndexRoute: typeof AdmindashboardBrandingIndexRoute
  AdmindashboardCampaignsIndexRoute: typeof AdmindashboardCampaignsIndexRoute
  AdmindashboardReportsIndexRoute: typeof AdmindashboardReportsIndexRoute
  AdmindashboardUsersIndexRoute: typeof AdmindashboardUsersIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdmindashboardSettingsRouteRoute:
    AdmindashboardSettingsRouteRouteWithChildren,
  AdminauthForgotPasswordRoute: AdminauthForgotPasswordRoute,
  AdminauthOtpRoute: AdminauthOtpRoute,
  AdminauthSignInRoute: AdminauthSignInRoute,
  AdminauthSignIn2Route: AdminauthSignIn2Route,
  AdminauthSignUpRoute: AdminauthSignUpRoute,
  AdmindashboardCampaignsSlugRoute: AdmindashboardCampaignsSlugRoute,
  AdmindashboardBrandingIndexRoute: AdmindashboardBrandingIndexRoute,
  AdmindashboardCampaignsIndexRoute: AdmindashboardCampaignsIndexRoute,
  AdmindashboardReportsIndexRoute: AdmindashboardReportsIndexRoute,
  AdmindashboardUsersIndexRoute: AdmindashboardUsersIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
